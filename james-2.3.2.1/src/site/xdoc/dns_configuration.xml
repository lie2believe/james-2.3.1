<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.    
-->
<document>

 <properties>
  <title>James 2.3 - Configuring DNS Services</title>
 </properties>

<body>
<section name="DNS Configuration">

  
<p>DNS Transport services are controlled by a configuration block in
the config.xml. This block affects SMTP remote delivery.</p>

<p>The dnsserver tag defines the boundaries of the configuration
block. It encloses all the relevant configuration for the DNS server.
The behavior of the DNS service is controlled by the attributes and
children of this tag.</p> 

<p>The standard children of the dnsserver tag are:</p>
<ul>
<li><strong>servers</strong> - This is a list of DNS Servers to be used by James and are 
specified by one, or more <strong><i>server</i></strong> elements, which are child elements. 
Each server element is the IP address of a single DNS server.
<source>
&lt;servers&gt;
  &lt;server&gt;127.0.0.1&lt;/server&gt;
  &lt;server&gt;166.181.194.205&lt;/server&gt;
&lt;/servers&gt;
</source>
</li>

<li><strong>authoritative</strong> - (<strong>true/false</strong>)This tag specifies whether or not 
to require authoritative (non-cached) DNS records; to only accept DNS responses that are 
authoritative for the domain. It is primarily useful in an intranet/extranet environment.
<p>This should always be <strong>false</strong> unless you understand the implications.</p>
</li>
</ul>
</section>
<section name="Sun JVM DNS Lookup Configuration.">
<p>Sun's JVM Internet address lookup uses a cache which is unbounded and doesn't time out.<br/>
This is obviously not great for a long running process like a mail server so we have introduced a system property <strong>networkaddress.cache.ttl</strong> that is used by the distributed phoenix start-up scripts, at startup, to override the java 1.4 <strong>Security.setProperty("networkaddress.cache.ttl")</strong>.<br/> By default this is set to <strong>300</strong> seconds.</p>
<p>This workaround will only be present if you use James as distributed. If you use James in any other container, including different versions of Phoenix, you will need to ensure that you make a similar configuration change to allow the internet address cache to perform acceptably.</p>
<p>James 2.3 has this workaround and it requires it to operate acceptably. Future versions of James will continue to have the workaround in place but will *not* require it. This will provide continued support for any mailets which you may deploy from other sources which might continue to use Sun's InetAddress class for DNS resolution.</p>
<p>We are not currently aware of the behaviour of this cache in other JVM implementations, nor of the effect, if any, which this change might have on them</p>
<p>For more on this read defect report <a href="http://issues.apache.org/jira/browse/JAMES-592">JAMES-592</a> and related defects.</p>
</section>
</body>
</document>
